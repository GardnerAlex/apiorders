openapi: 3.0.0
info:
  title: SmartMarket Pay API
  description: API для приема платежей
  contact:
    email: berezkin.dv@gmail.com
  version: 1.0.5
servers:
  - url: http://localhost:10100/smartpay/v1
    description: SwaggerHub API Auto Mocking
security:
  - bearerAuth: []
tags:
  - name: payments
    description: Платежные операции
  - name: callback
    description: Callback от платежного оператора
  - name: cards
    description: Операции с карточными связками
paths:
  /invoices:
    post:
      tags:
        - payments
      summary: Создать счет на оплату
      description: |
        Создать счет на оплату для клиента.
      operationId: create_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: Идентификатор созданного счета
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
  /invoices/{invoice_id}:
    get:
      tags:
        - payments
      summary: Получить данные по счету
      description: "Получить данные по счету. Вначале счет создается операцией POST\
        \ invoices, затем вызывается эта операция для получения данных счета и про\
        должения операции.\nВозможен поиск счета по паре service_id+order_id, если\
        \ invoice_id неизвестен. Для этого нужно указать invoice_id = 0, а в запро\
        се обязательно service_id и order_id. \n"
      operationId: get_invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID счета
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
        - name: service_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/service_id'
        - name: order_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/order_id'
        - name: status
          in: query
          description: Статус счета для начала отслеживания изменений. Если при вызове
            запроса счет найден, статус равен значению этого параметра, то ответ отдается
            только при смене статуса или по таймауту. Это используется платежной библиотекой
            на устройстве в "long poll" запросах для отслеживания факта проведения оплаты.
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: executed
        - name: wait
          in: query
          description: Время в секундах, которое сервер будет ожидать до смены статуса
            счета.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            example: 50
      responses:
        "200":
          description: Данные по счету, а также варианты оплаты в зависимости от статуса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    put:
      tags:
        - payments
      summary: Подтвердить оплату счета. Используется при двустадийных платежах.
      description: |
        Инициатор присылает подтверждение, полное или частичное, для завершения оплаты счета при двухстадийной оплате. Счет должен находиться в состоянии 3 "Предавторизация". По завершении счет переходит в состояние 0 "Оплачен"
      operationId: confirm_invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID счета
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      requestBody:
        description: Инфо о подтверждении/отмене счета
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "200":
          description: Счет подтвержден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    post:
      tags:
        - payments
      summary: Обновить данные по счету
      description: |
        Обновить данные по счету. После создания счета клиент может указать платежный инструмент
      operationId: upd_invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID счета
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      requestBody:
        description: Инфо о платежном инструменте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
      responses:
        "200":
          description: Статус счета, в зависимости от статуса варианты оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    delete:
      tags:
        - payments
      summary: Отменить оплату счета. Используется при двустадийных платежах.
      description: |
        Инициатор присылает запрос на отмену оплаты счета при двухстадийной оплате. Счет должен находиться в состоянии 3 "Предавторизация". По завершении счет переходит в состояние 6 "Отменен"
      operationId: delete_invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID счета
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        "204":
          description: Счет отменен
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    patch:
      tags:
        - payments
      summary: Сделать возврат счета, полный или частичный.
      description: |
        Инициатор присылает запрос на возврат, полный или частичный. Счет должен находиться в состоянии 0 "Оплачен". Запрос можно выполнять несколько раз, вплоть до полного возврата. Если произведен полный возврат, то счет переходит в состояние 7 "Возвращен"
      operationId: refund_invoice
      parameters:
        - name: invoice_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID счета
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      requestBody:
        description: Инфо об отмене счета. В частности, отменяемая сумма и корзина
          возврата
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
      responses:
        "200":
          description: Возврат произведен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
  /callback:
    get:
      tags:
        - callback
      summary: Получить список карт клиента
      description: |
        Получить оповещение о платеже от РБС.
      operationId: get_callback
      parameters:
        - name: mdOrder
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            description: Уникальный номер заказа в платёжной системе.
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
        - name: orderNumber
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            description: Уникальный номер (идентификатор) заказа в системе магазина.
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
        - name: checksum
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            description: Аутентификационный код, или контрольная сумма, полученная из
              набора параметров.
            example: DBBE9E54D42072D8CAF32C7F660DEB82086A25C14FD813888E231A99E1220AB3
        - name: sign_alias
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            description: description.
            example: stoloto
        - name: operation
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            description: Тип операции, о которой пришло уведомление.
            example: approved
            enum:
              - approved
              - deposited
              - reversed
              - refunded
              - declinedByTimeout
        - name: status
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
            description: Индикатор успешности операции, указанной в параметре operation.
            example: 0
            enum:
              - 0
              - 1
      responses:
        "200":
          description: Уведомление о получении оповещения
        "400":
          description: bad input parameter
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
      security: []
  /cardslist:
    get:
      tags:
        - cards
      summary: Получить список карт клиента
      description: |
        Получить список связок для клиента.
      operationId: get_cards
      parameters:
        - name: ucp_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/ucp_id'
        - name: sub
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/sub_id'
      responses:
        "200":
          description: Список карт клиента
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
  /cards:
    post:
      tags:
        - cards
      summary: Добавить банковскую карту клиента
      description: |
        Добавить связку для банковской карты. Затем эту связку можно использовать для безакцептной оплаты. По факту это создание счета на оплату, например, 1 руб. для проверки валидности карты, после подтверждения оплаты счет автоматически удаляется.
      operationId: add_card
      requestBody:
        description: return_urls
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
      responses:
        "200":
          description: Ссылка для проведения оплаты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
  /cards/{card_id}:
    get:
      tags:
        - cards
      summary: Получить информацию о банковской карте
      description: |
        Получить полную информацию о карте.
      operationId: get_card
      parameters:
        - name: card_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID карты
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
      responses:
        "200":
          description: Инфо о карте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    put:
      tags:
        - cards
      summary: Обновить данные банковской карты
      description: "Обновить данные о банковской карте. \n"
      operationId: update_card
      parameters:
        - name: card_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID карты
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
      requestBody:
        description: Инфо о карте
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_5'
      responses:
        "204":
          description: Успешно обновлено
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
    delete:
      tags:
        - cards
      summary: Удалить банковскую карту
      description: |
        Удалить карту.
      operationId: delete_card
      parameters:
        - name: card_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description: ID карты
            example: ad454ffg-6c54-4b01-90e6-d701748f0851
      responses:
        "204":
          description: Карта успешно удалена
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
        "401":
          description: Access token is missing or invalid
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_response'
components:
  schemas:
    return_urls:
      type: object
      properties:
        return_url:
          type: string
          description: Адрес, на который требуется перенаправить пользователя в случае
            успешной оплаты. Адрес должен быть указан полностью, включая используемый
            протокол (например, https://test.ru вместо test.ru).
        fail_url:
          type: string
          description: Адрес, на который требуется перенаправить пользователя в случае
            неуспешной оплаты. Адрес должен быть указан полностью, включая используемый
            протокол (например, https://test.ru вместо test.ru).
    invoice_consume:
      required:
        - state
      type: object
      properties:
        state:
          type: integer
          description: Состояние счета.| 0 - подтвержден 6 - отменен приложением после
            оплаты
          enum:
            - 0
            - 6
    invoice_ptype:
      type: object
      properties:
        ptype:
          type: integer
          description: |
            Тип оплаты счета. 0 - одностадийная оплата 1 - двухстадийная оплата Если параметр не указан, формируется одностадийная оплата.
          enum:
            - 0
            - 1
    cards:
      type: object
      properties:
        cards:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/card'
              - type: object
                properties:
                  bank_info:
                    $ref: '#/components/schemas/bank_info'
                description: Дополнительные данные банковской карты (связки)
      description: Платежные инструменты
    other_payment_instruments:
      type: object
      properties:
        other_payment_instruments:
          type: array
          items:
            $ref: '#/components/schemas/other_payment_instruments_other_payment_instruments'
      description: Платежные инструменты
    card:
      required:
        - card_id
      type: object
      properties:
        card_id:
          type: string
          description: id карты
          example: ad454ffg-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          description: Алиас карты, указанный клиентом
          example: Главная
        masked_pan:
          type: string
          description: Маскированный номер карты
          example: 411111**1111
        expiry_date:
          type: string
          description: Срок истечения действия карты в формате YYYYMM
          example: "201912"
        cardholder:
          type: string
          description: Имя держателя карты, указанное при оплате
          example: Ivan Petrov
        payment_system:
          type: string
          description: Наименование платёжной системы.
          example: VISA
        payment_system_image:
          type: string
          description: Логотип платёжной системы.
          format: url
          example: https://smartmarkettestift.online.sberbank.ru/icons/logo_visa.png
        image:
          type: string
          description: Логотип карты.
          format: url
          example: https://smartmarkettestift.online.sberbank.ru/icons/sberbank_mastercard_league_legends.jpeg
        paysys:
          type: string
          description: Наименование платёжного оператора.
          example: Эквайринг Сбербанка
        paysys_image:
          type: string
          description: Логотип платёжного оператора.
          format: url
          example: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
      description: Основные данные банковской карты (связки)
    bank_info:
      type: object
      properties:
        bank_name:
          type: string
          description: Наименование банка-эмитента.
          example: ПАО Сбербанк
        bank_country_code:
          type: string
          description: Код страны банка-эмитента.
          example: RU
        bank_country_name:
          type: string
          description: Наименование страны банка-эмитента
          example: Россия
        bank_image:
          type: string
          description: Ссылка на логотип банка
          example: https://emoji.slack-edge.com/TKK9DHNCV/sber/ad2df81a6cd9812d.png
      description: Данные банка-эмитента
    error1:
      type: object
      properties:
        user_message:
          type: string
        error_description:
          type: string
        error_code:
          type: integer
    error:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/error1'
    base_response:
      $ref: '#/components/schemas/error'
    form_url:
      type: object
      properties:
        form_url:
          type: string
          description: URL платежной формы, на который надо перенаправить браузер
            клиента
          example: https://3dsec.sberbank.ru/payment/merchants/test/payment_ru.html?mdOrder=70906e55-7114-41d6-8332-4609dc6590f4
      description: Информация для оплаты счета
    invoice_status:
      type: object
      properties:
        invoice_status:
          type: string
          description: Статус счета. Возможные значения > created     создан executed    исполняется
            cancelled   отменен пользователем paid        оплачен (2-х стадийная оплата)
            confirmed   подтвержден (1, 2-х стадийная оплата) reversed    отменен
            (2-х стадийная оплата) refunded    возвращен полностью wait        ожидает
            подтверждения/отмены/возврата
          example: created
    invoice_id:
      required:
        - invoice_id
      type: object
      properties:
        invoice_id:
          type: string
          description: Идентификатор счета
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
    invoice_date:
      type: object
      properties:
        invoice_date:
          type: string
          description: Дата создания счета
          example: 2020-04-29T08:18:03+03
    invoice:
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/invoice_invoice'
    initiator:
      type: object
      properties:
        app_id:
          type: string
          description: ID SmartApp-a. По нему определяются разрешения для приложения,
            инициировавшего платеж
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        session_id:
          type: string
          description: ID сессии
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        channel:
          type: string
          description: канал
          example: smartbox1
        device_id:
          type: string
          description: ID устройства
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      description: Инициатор заказа
    invoice_ret:
      allOf:
        - $ref: '#/components/schemas/invoice_id'
        - $ref: '#/components/schemas/invoice_date'
        - $ref: '#/components/schemas/invoice_status'
        - $ref: '#/components/schemas/invoice'
        - $ref: '#/components/schemas/image'
    client_contact:
      type: object
      properties:
        email:
          type: string
          description: email клиента
          example: qq@dd.eof
        phone:
          type: string
          description: телефон клиента
          example: "9123456789"
        contact:
          type: string
          description: способ связи с клиентом
          example: email
      description: Клиент
    participant:
      required:
        - orgID
      type: object
      properties:
        org_id:
          type: string
          description: ID организации
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      description: Данные получателя
    user_id:
      type: object
      properties:
        sub:
          type: string
    access_token:
      type: object
      properties:
        token:
          type: string
          description: access token пользователя в формате Bearer <token>
          example: Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6NDMyNDMyNDMyfQ.eyJhdWQiOiI5OEE4MDY1RS03Qjg1LTQyRTQtODNERC00ODAwNTVEMUJDMEQiLCJjbGllbnRfaWQiOiJEQTUyNzhBQy1BMDdGLUMwMUEtQjJEMy1DMjMxREJCMkUyMEYiLCJzdWIiOiJEMDU1MjUwMUJGN0UwNEZFNUM2MDlENUNFRkE2Nzk5NiIsImlzcyI6Imh0dHBzOi8vb25saW5lLnNiZXJiYW5rLnJ1L0NTQUZyb250L2luZGV4LmRvIiwiZXhwIjoxNTE2NjI5NDMyLCJpYXQiOjE1MTY2Mjk0MDIsImp0aSI6IjI2RDg1RERCLUNFREItNEM3NS1CMjYxLUZEMEY4OUU5RDYxNCJ9.YCyafza5PLTU7JtOZkd78cw4V3-sR7w-OAsuGLb8DnE
    ucp_id:
      type: string
      description: ЕПК.ID пользователя
      example: "1269663788098156986"
    sub_id:
      type: string
      description: sub_id пользователя
      example: a19f38a0e97ed3497be0eca816af4e0db3ddc33029c9d3d9effb9aa5235d168da3028e64eea639f7
    delivery_info:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address'
        delivery_type:
          type: string
          description: Тип доставки
          example: courier
        description:
          type: string
          description: Дополнительная информация по доставке
          example: Перезвонить за 1,5 часа
      description: Информация о доставке
    address:
      type: object
      properties:
        country:
          type: string
          description: Страна
          example: RU
        city:
          type: string
          description: Город
          example: Москва
        address:
          type: string
          description: Адрес
          example: ул. Вавилова, 19, офис 1
      description: Адрес
    order_id:
      type: string
      description: ID заказа в системе магазина
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    service_id:
      type: string
      description: ID сервиса (настраивается платежной системой и выдается пользователю
        платежного сервиса)
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    amount:
      type: integer
      description: Сумма в минимальных единицах валюты (в копейках). Например, 123р.00коп.
        = 12300
      example: 11836
    order:
      required:
        - amount
        - order_id
      type: object
      properties:
        order_id:
          $ref: '#/components/schemas/order_id'
        order_number:
          type: string
          description: Номер заказа в системе магазина, для клиента
          example: "145"
        order_date:
          type: string
          description: Дата заказа в системе магазина, [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
          format: date-time
        service_id:
          $ref: '#/components/schemas/service_id'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          type: string
          description: Код валюты в [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
          example: RUB
        purpose:
          type: string
          description: Краткое назначение платежа или наименование игры на языке language.
          example: Покупка в игре "Маша и Медведь, салон красоты Чародейка".
        description:
          type: string
          description: Описание платежа для отображения клиенту или печати
          example: Покупка внутриигрового контента в игре Маша и Медведь, салон красоты
            Чародейка.
        language:
          type: string
          description: Язык, текстовых полей, указанный с помощью [BCP 47](https://tools.ietf.org/rfc/bcp/bcp47.txt)
            кодирования. (Например, "en-US" для английского языка, используемого в
            США, "en-GB" для английского языка, используемого в Великобритании, и
            т.д.)
          example: ru-RU
        expiration_date:
          type: string
          description: Дата и время окончания жизни счета, [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
          format: date-time
        autocompletion_date:
          type: string
          description: Дата и время автозавершения платежа при двухстадийной оплате,
            [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
          format: date-time
        tax_system:
          type: integer
          description: "Система налогообложения, доступны следующие значения\n0 -\
            \ общая;\n1 - упрощённая, доход;\n2 - упрощённая, доход минус расход;\n\
            3 - единый налог на вменённый доход;\n4 - единый сельскохозяйственный\
            \ налог;\n5 - патентная система налогообложения. \n"
          example: 0
        order_bundle:
          type: array
          description: Состав заказа (элементы корзины)
          items:
            $ref: '#/components/schemas/bundle_param'
      description: Данные заказа
    params:
      type: array
      description: Доп. параметры заказа
      items:
        $ref: '#/components/schemas/param'
    param:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: Название параметра. Если начинается с "_itemAttributes_", то
            при передаче в РБС будет помещен в специальный контейнер itemAttributes
          example: packageName
        value:
          type: string
          description: Значение параметра
          example: com.MashaAndTheBear.HairSalon
      description: Доп. параметр
    bundle_param:
      allOf:
        - required:
            - name
            - position_id
          type: object
          properties:
            position_id:
              type: integer
              description: Уникальный идентификатор товарной позиции внутри Корзины
                Заказа
              example: 1
            name:
              type: string
              description: Наименование или описание товарной позиции в свободной форме
              example: Кучка из 100 кристаллов для использования при нырянии
            item_params:
              $ref: '#/components/schemas/params'
            quantity:
              $ref: '#/components/schemas/quantity'
            item_amount:
              type: integer
              description: Сумма стоимости всех товарных позиций одного positionId в
                деньгах в минимальных единицах валюты (в копейках)
              example: 11836
            currency:
              type: string
              description: Код валюты в [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
              example: RUB
            item_code:
              type: string
              description: Номер (идентификатор) товарной позиции в системе магазина.
                Параметр должен быть уникальным в рамках запроса.
              example: com.MashaAndTheBear.HairSalon.crystal100
            item_price:
              type: integer
              description: Стоимость одной товарной позиции одного positionId в деньгах
                в минимальных единицах валюты (в копейках)
              example: 11836
            discount_type:
              type: string
              description: Тип скидки на товарную позицию
              example: percent
            discount_value:
              type: number
              description: Значение скидки на товарную позицию
              example: 5.25
            interest_type:
              type: string
              description: Тип агентской комиссии за продажу товара
              example: agentPercent
            interest_value:
              type: number
              description: Значение агентской комиссии за продажу товара
              example: 15.105
            tax_type:
              type: integer
              description: |
                Ставка НДС, доступны следующие значения
                0 – без НДС;
                1 – НДС по ставке 0%;
                2 – НДС чека по ставке 10%;
                3 – НДС чека по ставке 18%;
                4 – НДС чека по расчётной ставке 10/110;
                5 – НДС чека по расчётной ставке 18/118;
                6 - НДС чека по ставке 20%;
                7 – НДС чека по расчётной ставке 20/120.';
              example: 6
            tax_sum:
              type: integer
              description: Сумма налога, высчитанная продавцом в деньгах в минимальных
                единицах валюты (в копейках)
              example: 2367
          description: Доп. параметр
        - $ref: '#/components/schemas/image'
    image:
      type: object
      properties:
        image:
          type: string
          description: Ссылка на картинку.
          format: url
          example: https://i-love-png.com/images/grim-reaper-icon.png
      description: Ссылка на картинку.
    quantity:
      required:
        - measure
        - value
      type: object
      properties:
        value:
          type: number
          description: Количество товарных позиций данного positionId. Для указания
            дробных чисел используйте десятичную точку.
          example: 1.05
        measure:
          type: string
          description: Мера измерения количества товарной позиции
          example: кг.
      description: Описание общего количества товарных позиций одного positionId и
        их меру измерения.
    body:
      allOf:
        - $ref: '#/components/schemas/user_id'
        - $ref: '#/components/schemas/invoice_ptype'
        - $ref: '#/components/schemas/invoice'
    inline_response_200:
      allOf:
        - $ref: '#/components/schemas/base_response'
      anyOf:
        - $ref: '#/components/schemas/invoice_id'
    inline_response_200_1:
      allOf:
        - $ref: '#/components/schemas/base_response'
        - $ref: '#/components/schemas/invoice_ret'
        - $ref: '#/components/schemas/cards'
        - $ref: '#/components/schemas/form_url'
    inline_response_400:
      allOf:
        - $ref: '#/components/schemas/base_response'
    body_1:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        order_bundle:
          type: array
          description: Состав заказа (элементы корзины)
          items:
            $ref: '#/components/schemas/bundle_param'
    body_2:
      allOf:
        - required:
            - code
          type: object
          properties:
            code:
              type: string
              description: Код инструмента
              example: card
              enum:
                - card
                - QR
                - new
            value:
              type: string
              description: Значение параметра, например, id карты
              example: ad454ffg-6c54-4b01-90e6-d701748f0851
          description: Выбранный инструмент
        - $ref: '#/components/schemas/return_urls'
    inline_response_200_2:
      allOf:
        - $ref: '#/components/schemas/base_response'
        - $ref: '#/components/schemas/form_url'
    body_3:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        refund_bundle:
          type: array
          description: Элементы корзины возвращаемых товаров
          items:
            $ref: '#/components/schemas/bundle_param'
    inline_response_200_3:
      allOf:
        - $ref: '#/components/schemas/base_response'
        - $ref: '#/components/schemas/cards'
    body_4:
      allOf:
        - $ref: '#/components/schemas/user_id'
        - required:
            - order_id
          type: object
          properties:
            order_id:
              $ref: '#/components/schemas/order_id'
          description: ID заказа
        - $ref: '#/components/schemas/return_urls'
    inline_response_200_4:
      allOf:
        - $ref: '#/components/schemas/base_response'
        - $ref: '#/components/schemas/card'
        - type: object
          properties:
            bank_info:
              $ref: '#/components/schemas/bank_info'
          description: Дополнительные данные банковской карты (связки)
    body_5:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Алиас карты, указанный клиентом
          example: Самая главная
      description: Данные банковской карты для изменения
    other_payment_instruments_other_payment_instruments:
      type: object
      properties:
        name:
          type: string
          description: Название
          example: Показать QR-код
        code:
          type: string
          description: Код
          example: QR
      description: Другие варианты оплаты
    invoice_invoice:
      required:
        - order
      type: object
      properties:
        purchaser:
          description: Покупатель
          allOf:
            - $ref: '#/components/schemas/client_contact'
        delivery_info:
          $ref: '#/components/schemas/delivery_info'
        invoice_params:
          $ref: '#/components/schemas/params'
        order:
          $ref: '#/components/schemas/order'
      description: Выставленный счет
  responses:
    unauthorized_error:
      description: Access token is missing or invalid
  examples:
    invoice_ok:
      value:
        invoice_id: d290f1ee-6c54-4b01-90e6-d701748f0851
        error:
          user_message: Счет оплачен
          error_description: error_description
          error_code: 0
    invoice_canceled:
      value:
        invoice_id: d290f1ee-6c54-4b01-90e6-d701748f0851
        error:
          user_message: Счет отменен
          error_description: error_description
          error_code: 6
    invoice_need_payment_instrument:
      value:
        invoice_id: d290f1ee-6c54-4b01-90e6-d701748f0851
        error:
          user_message: Требуется выбор платежного инструмента
          error_description: error_description
          error_code: 2
        cards:
          - card_id: ad454ffg-6c54-4b01-90e6-d701748f0851
            name: Основная
            masked_pan: 411111**1111
            expiry_date: "201912"
            cardholder: Ivan Petrov
            payment_system: VISA
            image: https://www.sberbank.ru/portalserver/content/atom/adbb65af-4773-43ee-aaa9-8999c8d514e7/content?id=d2515794-e817-4d68-a8f6-7d591e35e70d&_=1543500148511
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
          - card_id: 67344ffg-6c54-4b01-90e6-d701748fddea
            name: Дополнительная
            masked_pan: 521111**5252
            expiry_date: "201912"
            cardholder: Ivan Petrov
            payment_system: MasterCard
            image: https://www.sberbank.ru/portalserver/content/atom/adbb65af-4773-43ee-aaa9-8999c8d514e7/content?id=566e0013-bbfa-4468-8edc-d71bcdeb0ab5&_=1572507346703
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
          - card_id: ffffffff-ffff-ffff-ffff-ffffffffffff
            name: Новая
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
    invoice_need_pay:
      value:
        invoice_id: d290f1ee-6c54-4b01-90e6-d701748f0851
        error:
          user_message: Требуется оплата
          error_description: error_description
          error_code: 1
        form_url: https://3dsec.sberbank.ru/payment/merchants/test/payment_ru.html?mdOrder=70906e55-7114-41d6-8332-4609dc6590f4
    form_url:
      value:
        form_url: https://3dsec.sberbank.ru/payment/merchants/test/payment_ru.html?mdOrder=70906e55-7114-41d6-8332-4609dc6590f4
    invoice_id:
      value:
        invoice_id: d290f1ee-6c54-4b01-90e6-d701748f0851
    invoice:
      value:
        invoice:
          payer:
            client_id: d290f1ee-6c54-4b01-90e6-d701748f0851
            email: qq@dd.eof
            phone: 9123456789
            contact: email
          invoice_params:
            - key: packageName
              value: com.MashaAndTheBear.HairSalon
          order:
            order_id: d290f1ee-6c54-4b01-90e6-d701748f0851
            order_number: 145
            order_date: 2020-04-29T08:15:03+03
            service_id: d290f1ee-6c54-4b01-90e6-d701748f0851
            amount: 11836
            currency: RUB
            purpose: Покупка внутриигрового контента
            description: Покупка внутриигрового контента в игре Маша и Медведь, салон
              красоты Чародейка.
            language: ru-RU
            expiration_date: 2020-04-29T08:38:03+03
            order_bundle:
              - position_id: 1
                name: Кучка из 100 кристаллов для использования при нырянии
                item_params:
                  - key: packageName
                    value: com.MashaAndTheBear.HairSalon
                quantity:
                  value: 1
                  measure: шт.
                item_amount: 11836
                currency: RUB
                item_code: com.MashaAndTheBear.HairSalon.crystal100
    error_example:
      value:
        success: true
        errors:
          error:
            user_message: Требуется выбор платежного инструмента клиентом
            error_description: error_description
            error_code: 2
    payment_instruments:
      value:
        cards:
          - card_id: ad454ffg-6c54-4b01-90e6-d701748f0851
            name: Основная
            masked_pan: 411111**1111
            expiry_date: "201912"
            cardholder: Ivan Petrov
            payment_system: VISA
            image: https://www.sberbank.ru/portalserver/content/atom/adbb65af-4773-43ee-aaa9-8999c8d514e7/content?id=d2515794-e817-4d68-a8f6-7d591e35e70d&_=1543500148511
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
          - card_id: 67344ffg-6c54-4b01-90e6-d701748fddea
            name: Дополнительная
            masked_pan: 521111**5252
            expiry_date: "201912"
            cardholder: Ivan Petrov
            payment_system: MasterCard
            image: https://www.sberbank.ru/portalserver/content/atom/adbb65af-4773-43ee-aaa9-8999c8d514e7/content?id=566e0013-bbfa-4468-8edc-d71bcdeb0ab5&_=1572507346703
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
          - card_id: ffffffff-ffff-ffff-ffff-ffffffffffff
            name: Новая
            paysys: Эквайринг Сбербанка
            paysys_image: https://www.sberbank.ru/common/img/uploaded/redirected/s_m_business/acquiring/assets/images/intro@2x.png
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
